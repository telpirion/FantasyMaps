{
  "pipelineSpec": {
    "components": {
      "comp-automl-image-training-job": {
        "executorLabel": "exec-automl-image-training-job",
        "inputDefinitions": {
          "artifacts": {
            "dataset": {
              "artifactType": {
                "schemaTitle": "google.VertexDataset",
                "schemaVersion": "0.0.1"
              }
            }
          },
          "parameters": {
            "budget_milli_node_hours": {
              "type": "INT"
            },
            "disable_early_stopping": {
              "type": "STRING"
            },
            "display_name": {
              "type": "STRING"
            },
            "labels": {
              "type": "STRING"
            },
            "location": {
              "type": "STRING"
            },
            "model_display_name": {
              "type": "STRING"
            },
            "model_type": {
              "type": "STRING"
            },
            "multi_label": {
              "type": "STRING"
            },
            "prediction_type": {
              "type": "STRING"
            },
            "project": {
              "type": "STRING"
            },
            "test_fraction_split": {
              "type": "DOUBLE"
            },
            "training_fraction_split": {
              "type": "DOUBLE"
            },
            "validation_fraction_split": {
              "type": "DOUBLE"
            }
          }
        },
        "outputDefinitions": {
          "artifacts": {
            "model": {
              "artifactType": {
                "schemaTitle": "google.VertexModel",
                "schemaVersion": "0.0.1"
              }
            }
          }
        }
      },
      "comp-automl-image-training-job-2": {
        "executorLabel": "exec-automl-image-training-job-2",
        "inputDefinitions": {
          "artifacts": {
            "dataset": {
              "artifactType": {
                "schemaTitle": "google.VertexDataset",
                "schemaVersion": "0.0.1"
              }
            }
          },
          "parameters": {
            "budget_milli_node_hours": {
              "type": "INT"
            },
            "disable_early_stopping": {
              "type": "STRING"
            },
            "display_name": {
              "type": "STRING"
            },
            "labels": {
              "type": "STRING"
            },
            "location": {
              "type": "STRING"
            },
            "model_display_name": {
              "type": "STRING"
            },
            "model_type": {
              "type": "STRING"
            },
            "multi_label": {
              "type": "STRING"
            },
            "prediction_type": {
              "type": "STRING"
            },
            "project": {
              "type": "STRING"
            },
            "test_fraction_split": {
              "type": "DOUBLE"
            },
            "training_fraction_split": {
              "type": "DOUBLE"
            },
            "validation_fraction_split": {
              "type": "DOUBLE"
            }
          }
        },
        "outputDefinitions": {
          "artifacts": {
            "model": {
              "artifactType": {
                "schemaTitle": "google.VertexModel",
                "schemaVersion": "0.0.1"
              }
            }
          }
        }
      },
      "comp-create-training-metadata-from-firestore-op": {
        "executorLabel": "exec-create-training-metadata-from-firestore-op",
        "inputDefinitions": {
          "parameters": {
            "bucket_name": {
              "type": "STRING"
            },
            "collection_name": {
              "type": "STRING"
            },
            "project_id": {
              "type": "STRING"
            },
            "timestamp_str": {
              "type": "STRING"
            }
          }
        },
        "outputDefinitions": {
          "parameters": {
            "Output": {
              "type": "STRING"
            }
          }
        }
      },
      "comp-endpoint-create": {
        "executorLabel": "exec-endpoint-create",
        "inputDefinitions": {
          "parameters": {
            "description": {
              "type": "STRING"
            },
            "display_name": {
              "type": "STRING"
            },
            "encryption_spec_key_name": {
              "type": "STRING"
            },
            "labels": {
              "type": "STRING"
            },
            "location": {
              "type": "STRING"
            },
            "network": {
              "type": "STRING"
            },
            "project": {
              "type": "STRING"
            }
          }
        },
        "outputDefinitions": {
          "artifacts": {
            "endpoint": {
              "artifactType": {
                "schemaTitle": "google.VertexEndpoint",
                "schemaVersion": "0.0.1"
              }
            }
          },
          "parameters": {
            "gcp_resources": {
              "type": "STRING"
            }
          }
        }
      },
      "comp-image-dataset-create": {
        "executorLabel": "exec-image-dataset-create",
        "inputDefinitions": {
          "parameters": {
            "data_item_labels": {
              "type": "STRING"
            },
            "display_name": {
              "type": "STRING"
            },
            "gcs_source": {
              "type": "STRING"
            },
            "import_schema_uri": {
              "type": "STRING"
            },
            "labels": {
              "type": "STRING"
            },
            "location": {
              "type": "STRING"
            },
            "project": {
              "type": "STRING"
            }
          }
        },
        "outputDefinitions": {
          "artifacts": {
            "dataset": {
              "artifactType": {
                "schemaTitle": "google.VertexDataset",
                "schemaVersion": "0.0.1"
              }
            }
          }
        }
      },
      "comp-model-deploy": {
        "executorLabel": "exec-model-deploy",
        "inputDefinitions": {
          "artifacts": {
            "endpoint": {
              "artifactType": {
                "schemaTitle": "google.VertexEndpoint",
                "schemaVersion": "0.0.1"
              }
            },
            "model": {
              "artifactType": {
                "schemaTitle": "google.VertexModel",
                "schemaVersion": "0.0.1"
              }
            }
          },
          "parameters": {
            "automatic_resources_max_replica_count": {
              "type": "INT"
            },
            "automatic_resources_min_replica_count": {
              "type": "INT"
            },
            "dedicated_resources_accelerator_count": {
              "type": "INT"
            },
            "dedicated_resources_accelerator_type": {
              "type": "STRING"
            },
            "dedicated_resources_machine_type": {
              "type": "STRING"
            },
            "dedicated_resources_max_replica_count": {
              "type": "INT"
            },
            "dedicated_resources_min_replica_count": {
              "type": "INT"
            },
            "deployed_model_display_name": {
              "type": "STRING"
            },
            "disable_container_logging": {
              "type": "STRING"
            },
            "enable_access_logging": {
              "type": "STRING"
            },
            "explanation_metadata": {
              "type": "STRING"
            },
            "explanation_parameters": {
              "type": "STRING"
            },
            "service_account": {
              "type": "STRING"
            },
            "traffic_split": {
              "type": "STRING"
            }
          }
        },
        "outputDefinitions": {
          "parameters": {
            "gcp_resources": {
              "type": "STRING"
            }
          }
        }
      }
    },
    "deploymentSpec": {
      "executors": {
        "exec-automl-image-training-job": {
          "container": {
            "args": [
              "--init.project",
              "{{$.inputs.parameters['project']}}",
              "--init.location",
              "{{$.inputs.parameters['location']}}",
              "--init.display_name",
              "{{$.inputs.parameters['display_name']}}",
              "--init.prediction_type",
              "{{$.inputs.parameters['prediction_type']}}",
              "--init.multi_label",
              "{{$.inputs.parameters['multi_label']}}",
              "--init.model_type",
              "{{$.inputs.parameters['model_type']}}",
              "--init.labels",
              "{{$.inputs.parameters['labels']}}",
              "--method.dataset",
              "{{$.inputs.artifacts['dataset'].metadata['resourceName']}}",
              "--method.disable_early_stopping",
              "{{$.inputs.parameters['disable_early_stopping']}}",
              "--method.model_display_name",
              "{{$.inputs.parameters['model_display_name']}}",
              "--method.training_fraction_split",
              "{{$.inputs.parameters['training_fraction_split']}}",
              "--method.validation_fraction_split",
              "{{$.inputs.parameters['validation_fraction_split']}}",
              "--method.test_fraction_split",
              "{{$.inputs.parameters['test_fraction_split']}}",
              "--method.budget_milli_node_hours",
              "{{$.inputs.parameters['budget_milli_node_hours']}}",
              "--executor_input",
              "{{$}}",
              "--resource_name_output_artifact_uri",
              "{{$.outputs.artifacts['model'].uri}}"
            ],
            "command": [
              "python3",
              "-m",
              "google_cloud_pipeline_components.container.aiplatform.remote_runner",
              "--cls_name",
              "AutoMLImageTrainingJob",
              "--method_name",
              "run"
            ],
            "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:1.0.2"
          }
        },
        "exec-automl-image-training-job-2": {
          "container": {
            "args": [
              "--init.project",
              "{{$.inputs.parameters['project']}}",
              "--init.location",
              "{{$.inputs.parameters['location']}}",
              "--init.display_name",
              "{{$.inputs.parameters['display_name']}}",
              "--init.prediction_type",
              "{{$.inputs.parameters['prediction_type']}}",
              "--init.multi_label",
              "{{$.inputs.parameters['multi_label']}}",
              "--init.model_type",
              "{{$.inputs.parameters['model_type']}}",
              "--init.labels",
              "{{$.inputs.parameters['labels']}}",
              "--method.dataset",
              "{{$.inputs.artifacts['dataset'].metadata['resourceName']}}",
              "--method.disable_early_stopping",
              "{{$.inputs.parameters['disable_early_stopping']}}",
              "--method.model_display_name",
              "{{$.inputs.parameters['model_display_name']}}",
              "--method.training_fraction_split",
              "{{$.inputs.parameters['training_fraction_split']}}",
              "--method.validation_fraction_split",
              "{{$.inputs.parameters['validation_fraction_split']}}",
              "--method.test_fraction_split",
              "{{$.inputs.parameters['test_fraction_split']}}",
              "--method.budget_milli_node_hours",
              "{{$.inputs.parameters['budget_milli_node_hours']}}",
              "--executor_input",
              "{{$}}",
              "--resource_name_output_artifact_uri",
              "{{$.outputs.artifacts['model'].uri}}"
            ],
            "command": [
              "python3",
              "-m",
              "google_cloud_pipeline_components.container.aiplatform.remote_runner",
              "--cls_name",
              "AutoMLImageTrainingJob",
              "--method_name",
              "run"
            ],
            "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:1.0.2"
          }
        },
        "exec-create-training-metadata-from-firestore-op": {
          "container": {
            "args": [
              "--executor_input",
              "{{$}}",
              "--function_to_execute",
              "create_training_metadata_from_firestore_op"
            ],
            "command": [
              "sh",
              "-c",
              "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'google-cloud-storage' 'google-cloud-firestore' 'kfp==1.8.12' && \"$0\" \"$@\"\n",
              "sh",
              "-ec",
              "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
              "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing import *\n\ndef create_training_metadata_from_firestore_op(\n    collection_name: str,\n    timestamp_str: str,\n    project_id: str,\n    bucket_name: str\n) -> str:\n    from google.cloud import firestore\n    from google.cloud import storage\n\n    gs_training_data_uri = f\"Manifests/map_training_{timestamp_str}.jsonl\"\n\n    print(f\"Project ID: {project_id}\")\n\n    firestore_client = firestore.Client(project=project_id)\n    collection_ref = firestore_client.collection(collection_name)\n\n    training_data = []\n\n    # Get all of the non-test training data from collection\n    docs = (collection_ref\n                .where(\"source\", \"==\", \"TrainingData\")\n                .select([\"gcsURI\", \"computedBBoxes\"])\n                #.limit(10)\n                .stream())\n    for doc in docs:\n        doc_dict = doc.to_dict()\n\n        datum = {\n            \"imageGcsUri\": doc_dict[\"gcsURI\"],\n            \"boundingBoxAnnotations\": doc_dict[\"computedBBoxes\"]\n        }\n        training_data.append(datum)\n\n    # Collect user submitted and scraped data\n    scraped_docs = (collection_ref\n                .where(\"source\", \"==\", \"ScrapedData\")\n                .select([\"gcsURI\", \"computedBBoxes\"])\n                .stream())\n\n    for d in scraped_docs:\n        doc_dict = d.to_dict()\n\n        datum = {\n            \"imageGcsUri\": doc_dict[\"gcsURI\"],\n            \"boundingBoxAnnotations\": doc_dict[\"computedBBoxes\"]\n        }\n        training_data.append(datum)\n\n    # TODO: define splits manually to verify differences between\n    # enhanced and unenhanced scraped data\n\n\n    storage_client = storage.Client(project=project_id)\n    bucket = storage_client.bucket(bucket_name)\n\n    input_str = \"\\n\".join([str(d) for d in training_data])\n    file_blob = bucket.blob(gs_training_data_uri)\n    file_blob.upload_from_string(input_str)\n\n    full_uri = f\"gs://{bucket_name}/{gs_training_data_uri}\"\n\n    return full_uri\n\n"
            ],
            "image": "python:3.9"
          }
        },
        "exec-endpoint-create": {
          "container": {
            "args": [
              "--type",
              "CreateEndpoint",
              "--payload",
              "{\"display_name\": \"{{$.inputs.parameters['display_name']}}\", \"description\": \"{{$.inputs.parameters['description']}}\", \"labels\": {{$.inputs.parameters['labels']}}, \"encryption_spec\": {\"kms_key_name\":\"{{$.inputs.parameters['encryption_spec_key_name']}}\"}, \"network\": \"{{$.inputs.parameters['network']}}\"}",
              "--project",
              "{{$.inputs.parameters['project']}}",
              "--location",
              "{{$.inputs.parameters['location']}}",
              "--gcp_resources",
              "{{$.outputs.parameters['gcp_resources'].output_file}}",
              "--executor_input",
              "{{$}}"
            ],
            "command": [
              "python3",
              "-u",
              "-m",
              "google_cloud_pipeline_components.container.v1.gcp_launcher.launcher"
            ],
            "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:1.0.2"
          }
        },
        "exec-image-dataset-create": {
          "container": {
            "args": [
              "--method.project",
              "{{$.inputs.parameters['project']}}",
              "--method.location",
              "{{$.inputs.parameters['location']}}",
              "--method.display_name",
              "{{$.inputs.parameters['display_name']}}",
              "--method.data_item_labels",
              "{{$.inputs.parameters['data_item_labels']}}",
              "--method.gcs_source",
              "{{$.inputs.parameters['gcs_source']}}",
              "--method.import_schema_uri",
              "{{$.inputs.parameters['import_schema_uri']}}",
              "--method.labels",
              "{{$.inputs.parameters['labels']}}",
              "--executor_input",
              "{{$}}",
              "--resource_name_output_artifact_uri",
              "{{$.outputs.artifacts['dataset'].uri}}"
            ],
            "command": [
              "python3",
              "-m",
              "google_cloud_pipeline_components.container.aiplatform.remote_runner",
              "--cls_name",
              "ImageDataset",
              "--method_name",
              "create"
            ],
            "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:1.0.2"
          }
        },
        "exec-model-deploy": {
          "container": {
            "args": [
              "--type",
              "DeployModel",
              "--payload",
              "{\"endpoint\": \"{{$.inputs.artifacts['endpoint'].metadata['resourceName']}}\", \"traffic_split\": {{$.inputs.parameters['traffic_split']}}, \"deployed_model\": {\"model\": \"{{$.inputs.artifacts['model'].metadata['resourceName']}}\", \"dedicated_resources\": {\"machine_spec\": {\"machine_type\": \"{{$.inputs.parameters['dedicated_resources_machine_type']}}\", \"accelerator_type\": \"{{$.inputs.parameters['dedicated_resources_accelerator_type']}}\", \"accelerator_count\": {{$.inputs.parameters['dedicated_resources_accelerator_count']}}}, \"min_replica_count\": {{$.inputs.parameters['dedicated_resources_min_replica_count']}}, \"max_replica_count\": {{$.inputs.parameters['dedicated_resources_max_replica_count']}}}, \"automatic_resources\": {\"min_replica_count\": {{$.inputs.parameters['automatic_resources_min_replica_count']}}, \"max_replica_count\": {{$.inputs.parameters['automatic_resources_max_replica_count']}}}, \"service_account\": \"{{$.inputs.parameters['service_account']}}\", \"disable_container_logging\": {{$.inputs.parameters['disable_container_logging']}}, \"enable_access_logging\": {{$.inputs.parameters['enable_access_logging']}}, \"explanation_spec\": {\"parameters\": {{$.inputs.parameters['explanation_parameters']}}, \"metadata\": {{$.inputs.parameters['explanation_metadata']}}}}}",
              "--project",
              "",
              "--location",
              "",
              "--gcp_resources",
              "{{$.outputs.parameters['gcp_resources'].output_file}}"
            ],
            "command": [
              "python3",
              "-u",
              "-m",
              "google_cloud_pipeline_components.container.v1.gcp_launcher.launcher"
            ],
            "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:1.0.2"
          }
        }
      }
    },
    "pipelineInfo": {
      "name": "dnd-maps-training-and-deployment"
    },
    "root": {
      "dag": {
        "tasks": {
          "automl-image-training-job": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-automl-image-training-job"
            },
            "dependentTasks": [
              "image-dataset-create"
            ],
            "inputs": {
              "artifacts": {
                "dataset": {
                  "taskOutputArtifact": {
                    "outputArtifactKey": "dataset",
                    "producerTask": "image-dataset-create"
                  }
                }
              },
              "parameters": {
                "budget_milli_node_hours": {
                  "runtimeValue": {
                    "constantValue": {
                      "intValue": "40000"
                    }
                  }
                },
                "disable_early_stopping": {
                  "runtimeValue": {
                    "constantValue": {
                      "intValue": "0"
                    }
                  }
                },
                "display_name": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "train-dnd-maps-full-grid-model-online-20220803020036"
                    }
                  }
                },
                "labels": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "{}"
                    }
                  }
                },
                "location": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "us-central1"
                    }
                  }
                },
                "model_display_name": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "dnd-maps-full-grid-model-online-20220803020036"
                    }
                  }
                },
                "model_type": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "CLOUD_HIGH_ACCURACY_1"
                    }
                  }
                },
                "multi_label": {
                  "runtimeValue": {
                    "constantValue": {
                      "intValue": "0"
                    }
                  }
                },
                "prediction_type": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "object_detection"
                    }
                  }
                },
                "project": {
                  "componentInputParameter": "project"
                },
                "test_fraction_split": {
                  "runtimeValue": {
                    "constantValue": {
                      "doubleValue": 0.1
                    }
                  }
                },
                "training_fraction_split": {
                  "runtimeValue": {
                    "constantValue": {
                      "doubleValue": 0.7
                    }
                  }
                },
                "validation_fraction_split": {
                  "runtimeValue": {
                    "constantValue": {
                      "doubleValue": 0.2
                    }
                  }
                }
              }
            },
            "taskInfo": {
              "name": "automl-image-training-job"
            }
          },
          "automl-image-training-job-2": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-automl-image-training-job-2"
            },
            "dependentTasks": [
              "image-dataset-create"
            ],
            "inputs": {
              "artifacts": {
                "dataset": {
                  "taskOutputArtifact": {
                    "outputArtifactKey": "dataset",
                    "producerTask": "image-dataset-create"
                  }
                }
              },
              "parameters": {
                "budget_milli_node_hours": {
                  "runtimeValue": {
                    "constantValue": {
                      "intValue": "90000"
                    }
                  }
                },
                "disable_early_stopping": {
                  "runtimeValue": {
                    "constantValue": {
                      "intValue": "0"
                    }
                  }
                },
                "display_name": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "train-dnd-maps-full-grid-model-exportable-20220803020036"
                    }
                  }
                },
                "labels": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "{}"
                    }
                  }
                },
                "location": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "us-central1"
                    }
                  }
                },
                "model_display_name": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "dnd-maps-full-grid-model-exportable-20220803020036"
                    }
                  }
                },
                "model_type": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "MOBILE_TF_HIGH_ACCURACY_1"
                    }
                  }
                },
                "multi_label": {
                  "runtimeValue": {
                    "constantValue": {
                      "intValue": "0"
                    }
                  }
                },
                "prediction_type": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "object_detection"
                    }
                  }
                },
                "project": {
                  "componentInputParameter": "project"
                },
                "test_fraction_split": {
                  "runtimeValue": {
                    "constantValue": {
                      "doubleValue": 0.1
                    }
                  }
                },
                "training_fraction_split": {
                  "runtimeValue": {
                    "constantValue": {
                      "doubleValue": 0.7
                    }
                  }
                },
                "validation_fraction_split": {
                  "runtimeValue": {
                    "constantValue": {
                      "doubleValue": 0.2
                    }
                  }
                }
              }
            },
            "taskInfo": {
              "name": "automl-image-training-job-2"
            }
          },
          "create-training-metadata-from-firestore-op": {
            "cachingOptions": {},
            "componentRef": {
              "name": "comp-create-training-metadata-from-firestore-op"
            },
            "inputs": {
              "parameters": {
                "bucket_name": {
                  "componentInputParameter": "bucket_name"
                },
                "collection_name": {
                  "componentInputParameter": "collection_name"
                },
                "project_id": {
                  "componentInputParameter": "project"
                },
                "timestamp_str": {
                  "componentInputParameter": "timestamp_str"
                }
              }
            },
            "taskInfo": {
              "name": "create-training-metadata-from-firestore-op"
            }
          },
          "endpoint-create": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-endpoint-create"
            },
            "inputs": {
              "parameters": {
                "description": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": ""
                    }
                  }
                },
                "display_name": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "full-grid-model"
                    }
                  }
                },
                "encryption_spec_key_name": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": ""
                    }
                  }
                },
                "labels": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "{}"
                    }
                  }
                },
                "location": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "us-central1"
                    }
                  }
                },
                "network": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": ""
                    }
                  }
                },
                "project": {
                  "componentInputParameter": "project"
                }
              }
            },
            "taskInfo": {
              "name": "endpoint-create"
            }
          },
          "image-dataset-create": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-image-dataset-create"
            },
            "dependentTasks": [
              "create-training-metadata-from-firestore-op"
            ],
            "inputs": {
              "parameters": {
                "data_item_labels": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "{}"
                    }
                  }
                },
                "display_name": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "dnd-maps-max-grid-20220803020036"
                    }
                  }
                },
                "gcs_source": {
                  "taskOutputParameter": {
                    "outputParameterKey": "Output",
                    "producerTask": "create-training-metadata-from-firestore-op"
                  }
                },
                "import_schema_uri": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "gs://google-cloud-aiplatform/schema/dataset/ioformat/image_bounding_box_io_format_1.0.0.yaml"
                    }
                  }
                },
                "labels": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "{}"
                    }
                  }
                },
                "location": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "us-central1"
                    }
                  }
                },
                "project": {
                  "componentInputParameter": "project"
                }
              }
            },
            "taskInfo": {
              "name": "image-dataset-create"
            }
          },
          "model-deploy": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-model-deploy"
            },
            "dependentTasks": [
              "automl-image-training-job",
              "endpoint-create"
            ],
            "inputs": {
              "artifacts": {
                "endpoint": {
                  "taskOutputArtifact": {
                    "outputArtifactKey": "endpoint",
                    "producerTask": "endpoint-create"
                  }
                },
                "model": {
                  "taskOutputArtifact": {
                    "outputArtifactKey": "model",
                    "producerTask": "automl-image-training-job"
                  }
                }
              },
              "parameters": {
                "automatic_resources_max_replica_count": {
                  "runtimeValue": {
                    "constantValue": {
                      "intValue": "1"
                    }
                  }
                },
                "automatic_resources_min_replica_count": {
                  "runtimeValue": {
                    "constantValue": {
                      "intValue": "1"
                    }
                  }
                },
                "dedicated_resources_accelerator_count": {
                  "runtimeValue": {
                    "constantValue": {
                      "intValue": "0"
                    }
                  }
                },
                "dedicated_resources_accelerator_type": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": ""
                    }
                  }
                },
                "dedicated_resources_machine_type": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": ""
                    }
                  }
                },
                "dedicated_resources_max_replica_count": {
                  "runtimeValue": {
                    "constantValue": {
                      "intValue": "0"
                    }
                  }
                },
                "dedicated_resources_min_replica_count": {
                  "runtimeValue": {
                    "constantValue": {
                      "intValue": "0"
                    }
                  }
                },
                "deployed_model_display_name": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": ""
                    }
                  }
                },
                "disable_container_logging": {
                  "runtimeValue": {
                    "constantValue": {
                      "intValue": "0"
                    }
                  }
                },
                "enable_access_logging": {
                  "runtimeValue": {
                    "constantValue": {
                      "intValue": "0"
                    }
                  }
                },
                "explanation_metadata": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "{}"
                    }
                  }
                },
                "explanation_parameters": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "{}"
                    }
                  }
                },
                "service_account": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": ""
                    }
                  }
                },
                "traffic_split": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "{}"
                    }
                  }
                }
              }
            },
            "taskInfo": {
              "name": "model-deploy"
            }
          }
        }
      },
      "inputDefinitions": {
        "parameters": {
          "bucket_name": {
            "type": "STRING"
          },
          "collection_name": {
            "type": "STRING"
          },
          "project": {
            "type": "STRING"
          },
          "timestamp_str": {
            "type": "STRING"
          }
        }
      }
    },
    "schemaVersion": "2.0.0",
    "sdkVersion": "kfp-1.8.12"
  },
  "runtimeConfig": {
    "parameters": {
      "bucket_name": {
        "stringValue": "fantasy-maps"
      },
      "collection_name": {
        "stringValue": "FantasyMaps"
      },
      "project": {
        "stringValue": "fantasymaps-334622"
      },
      "timestamp_str": {
        "stringValue": "20220803020036"
      }
    }
  }
}